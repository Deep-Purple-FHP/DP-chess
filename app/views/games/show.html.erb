<br />

<script>
  var pieceLocation = ""
  var pieceDestination = ""

    $(function() {
      $( "td" ).hover(
        function() {
          $( this ).addClass( 'highlight_this_cell' );
        },

        function() {
          $( this ).removeClass( 'highlight_this_cell' );
         });

         function populateBoard(data) {
           game = data
           data.game.pieces.forEach(function(p) {
             var piece = p.piece
             cell = $('#Board tr td[row='+ piece.y_position +'][col=' + piece.x_position + ']');
             cell.html('<img alt="P" src="' + piece.icon + '" piece_id="' + piece.id + '" >');
           });
         }

      $( "td" ).click(
        function(event) {
          pieceLocation = $(event.target).attr('id');
          $ ( this ).toggleClass ( 'select_this_cell' );
          console.log(pieceLocation);
          $.post( "pieces#update" ), pieceLocation, function (data) {
            console.log(data)
          }
        });

      $.ajax({
        url: '<%= game_path(@game, format: :json) %>'
      }).done(function( data ) {
          console.log( "Sample of data:", data );
          populateBoard(data);
        });
      $('#board').ready( function(){
        $('#Board tr td').each(function(i) {
          $( this ).attr('row', $( this ).parent().index());
          $( this ).attr('col', $( this ).index());
        })
      });
    });


//Build the board

//Deploy the pieces





    // DONE:  Toggle does this automatically. Need to add click method next to select a piece and keep it highlighted, click again deselects

    // DONE:  Then need to add ability to click on board location to select desired piece location
        // sub-issue.  ATM, you can still click on yet more squares.

    // pull the cell id when clicked, pass that value to data

    //  Add some logic.  If two squares are selected, trigger alert alert box to confirm move?
    // Did a bunch of research tonight and my brain has now melted.  Becuase jQuery runs AFTER the ROR code, the only way to get access to the destination cell ID is to do an AJAX post request.  To do this, I will add a 'confirm move' button that the jQuery will listen for the click.  When the click occurs, this will trigger the AJAX request which will send the origin and destination cell IDs back to the server to update the piece location.  But where do I post to??? An html address?
    function clickableGrid( rows, cols, callback ){
      var i=0;
      var grid = document.createElement('table');
      grid.className = 'grid';
      for (var r=0;r<rows;++r){
        var tr = grid.appendChild(document.createElement('tr'));
        for (var c=0;c<cols;++c){
          var cell = tr.appendChild(document.createElement('td'));
          cell.innerHTML = ++i;
          cell.addEventListener('click',(function(el,r,c,i){
            return function(){ callback(el,r,c,i); }
           })(cell,r,c,i),false);
        }
      }
      return grid;
    }

</script>

<h1> The pieces in this game include: </h1>
<% pieces = Piece.where(game_id: 34) %>

<!-- create a row on the board, define each cell -->
<!-- as each cell is being created, look up if a piece exists in that cell, if so display, if not, return null -->

<div>

<% pieces.each do |p| %>

  <%= image_tag p.icon %>
<% end %>
</div>

<table id="Board" width="700px" height="700px">
  <tr id="row_8">
    <td id="A8" class="black"></td>
    <td id="B8" class="white"></td>
    <td id="C8" class="black"></td>
    <td id="D8" class="white"></td>
    <td id="E8" class="black"></td>
    <td id="F8" class="white"></td>
    <td id="G8" class="black"></td>
    <td id="H8" class="white"></td>
  </tr>
  <tr id="row_7">
    <td id="A7" class="black"></td>
    <td id="B7" class="white"></td>
    <td id="C7" class="black"></td>
    <td id="D7" class="white"></td>
    <td id="E7" class="black"></td>
    <td id="F7" class="white"></td>
    <td id="G7" class="black"></td>
    <td id="H7" class="white"></td>
  </tr>
  <tr id="row_6">
    <td id="A6" class="black"></td>
    <td id="B6" class="white"></td>
    <td id="C6" class="black"></td>
    <td id="D6" class="white"></td>
    <td id="E6" class="black"></td>
    <td id="F6" class="white"></td>
    <td id="G6" class="black"></td>
    <td id="H6" class="white"></td>
  </tr>
  <tr id="row_5">
    <td id="A5" class="black"></td>
    <td id="B5" class="white"></td>
    <td id="C5" class="black"></td>
    <td id="D5" class="white"></td>
    <td id="E5" class="black"></td>
    <td id="F5" class="white"></td>
    <td id="G5" class="black"></td>
    <td id="H5" class="white"></td>
  </tr>
  <tr id="row_4">
    <td id="A4" class="black"></td>
    <td id="B4" class="white"></td>
    <td id="C4" class="black"></td>
    <td id="D4" class="white"></td>
    <td id="E4" class="black"></td>
    <td id="F4" class="white"></td>
    <td id="G4" class="black"></td>
    <td id="H4" class="white"></td>
  </tr>
  <tr id="row_3">
    <td id="A3" class="black"></td>
    <td id="B3" class="white"></td>
    <td id="C3" class="black"></td>
    <td id="D3" class="white"></td>
    <td id="E3" class="black"></td>
    <td id="F3" class="white"></td>
    <td id="G3" class="black"></td>
    <td id="H3" class="white"></td>
  </tr>
  <tr id="row_2">
    <td id="A2" class="black"></td>
    <td id="B2" class="white"></td>
    <td id="C2" class="black"></td>
    <td id="D2" class="white"></td>
    <td id="E2" class="black"></td>
    <td id="F2" class="white"></td>
    <td id="G2" class="black"></td>
    <td id="H2" class="white"></td>
  </tr>
  <tr id="row_1">
    <td id="A1" class="black"></td>
    <td id="B1" class="white"></td>
    <td id="C1" class="black"></td>
    <td id="D1" class="white"></td>
    <td id="E1" class="black"></td>
    <td id="F1" class="white"></td>
    <td id="G1" class="black"></td>
    <td id="H1" class="white"></td>
  </tr>
</table>

<!-- Here we need to place the pieces on the board based on the most recent locations in the piece model  -->
